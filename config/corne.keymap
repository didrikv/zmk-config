/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
            behaviors {
                spaceb: space_backspace {
                    compatible = "zmk,behavior-mod-morph";
                    label = "SPACE_BACKSPACE";
                    #binding-cells = <0>;
                    bindings = <&kp SPACE>, <&kp BSPC>;
                    mods = <(MOD_LSHFT)>;
                };
                td0: tap_dance_0 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_0";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp SQT>, <&kp DQT>;
                };
                td1: tap_dance_1 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_1";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LBRC>, <&kp RBRC>;
                };
                td2: tap_dance_2 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_2";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LPAR>, <&kp RPAR>;
                };
                td3: tap_dance_3 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_3";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LBKT>, <&kp RBKT>;
                };
            };
            
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENT  |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                   | META| SHFT | RSE |   | LWR | SPC  | CTL |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC &kp A &kp S &kp D &kp F &kp G     &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET
   &sk LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &sk RSHFT
                  &kp LMETA &kp LSHFT &mo 2   &mo 1 &spaceb &kp RCTRL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | TAB  | home|     |  up |     |pg_up|   |  -  |  7  |  8  |  9  |  0  |  *   |
// | ESC  | end |right| down| left|pg_d |   |  .  |  4  |  5  |  6  |  =  |  +   |
// | SHFT |     |     |     |     |     |   |  %  |  1  |  2  |  3  |  /  |  ^   |
//                    | META| SPC | RSE |   | LWR | SPC  | CTL |
                        bindings = <
   &trans &kp HOME &none &kp UP &none &kp PG_UP     &kp MINUS &kp N7 &kp N8 &kp N9 &kp N0 &kp ASTRK
   &trans &kp END &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN     &kp DOT &kp N4 &kp N5 &kp N6 &kp EQUAL &kp PLUS
   &trans &none &none &none &none &none     &kp PRCNT &kp N1 &kp N2 &kp N3 &trans &kp CARET
                    &trans &kp SPACE &trans    &trans &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |     |     |     |     |     |   |  -  |  $  |  {} |  &  |  '" |  *   |
// | ESC  |     |     |     |     |     |   |  .  |  _  |  () |  !  |  =  |  +   |
// | SHFT |     |     |     |     |     |   |  %  |  \  |  [] |  |  |  /  |  ^   |
//                   | META| SHFT | RSE |   | LWR | SPC  | CTL |
                        bindings = <
   &trans &none &none &none &none &none       &kp MINUS &kp DLLR &td1 &kp AMPS &td0 &kp ASTRK
   &trans &none &none &none &none &none       &kp DOT &kp UNDER &td2 &kp EXCL &kp EQUAL &kp PLUS
   &trans &none &none &none &none &none       &kp PRCNT &kp BSLH &td3 &kp PIPE &trans &kp CARET
               &trans &trans &trans       &trans  &trans  &trans
                        >;
                };
        };
};
